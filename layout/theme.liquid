{% assign locale = request.locale.iso_code  %}
<!doctype html>
<html class="no-js no-touch" lang="{{ request.locale.iso_code }}">
  <head>
    {% assign domain = request.host %}
    {%- capture gtm_id -%}
      {%- case domain -%}
        {%- when 'www.planet-cards.com' -%}
          GTM-M4TFFSZ
        {%- when 'www.planet-cards.de' -%}
          GTM-THZ8CW2
        {%- when 'www.planet-cards.it'-%}
          GTM-NPC6RZ6
      {%- endcase -%}
    {%- endcapture -%}

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-K3QKC5PP');</script>
<!-- End Google Tag Manager -->
    
    <script>
      window.Store = window.Store || {};
      window.Store.id = {{ shop.id }};
      const isCustomerLoggedIn = {% if customer %} true {% else %} false {% endif %};
      {% if customer %}
      const customerWishlist =  ("{{ customer.metafields.custom.wishlist.value }}" != "" )? "{{ customer.metafields.custom.wishlist.value }}".split(","): [];
      const customerId = {{ customer.id }};
      {% endif %}
    </script>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    {% if template contains 'page' and page.metafields.custom.languages %}
      {% assign current_lang = request.locale.iso_code %}
      {% assign disallowed_langs = page.metafields.custom.languages.value %}
      {% assign languages_metafield = page.metafields.custom.languages.value | split: ',' | map: 'strip' %}
      {% if disallowed_langs contains current_lang %}
        <meta name="robots" content="noindex, nofollow">
      {% endif %}
    {% endif %}
    
    {% if template contains 'page' %}
      {% if page.metafields.custom.noindex or page.metafields.custom.nofollow %}
        {% assign noindex='index' %}
        {% assign nofollow='follow' %}
        {% if page.metafields.custom.noindex %}
          {% if page.metafields.custom.noindex.value contains locale %}
            {% assign noindex='noindex' %}          
          {% endif %}
        {% endif %}
        {% if page.metafields.custom.nofollow %}
          {% if page.metafields.custom.nofollow.value contains locale %}
            {% assign nofollow='nofollow' %}          
          {% endif %}
        {% endif %}
        
        <meta name="robots" content="{{ noindex }},{{ nofollow }}">
        
      {% endif %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}
    {% if template.name == 'index'%}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    <link rel="preconnect" href="https://cdn.shopify.com">
    <link rel="preconnect" href="https://fonts.shopifycdn.com">
    <link rel="preconnect" href="https://v.shopify.com">
    <link rel="preconnect" href="https://cdn.shopifycloud.com">
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
      integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    >
    <script
      src="https://code.jquery.com/jquery-3.4.1.min.js"
      crossorigin="anonymous"
    ></script>
    <title>
      {%- if template contains 'collection' -%}
          {%- if collection and collection.metafields.custom.seo_tags_content and current_tags -%}
            {%- assign break_loop = false -%}
            {%- for seo_content in collection.metafields.custom.seo_tags_content.value -%}
              {%- if break_loop -%}
                {% break %}
              {%- endif -%}
              {%- assign isLast = forloop.last -%}
              {%- for current_tag in current_tags -%}
                {%- assign joined_tags = seo_content.tags | join: "," -%}
                {%- if joined_tags contains current_tag and seo_content.meta_title_tag -%}
                  {{- seo_content.meta_title_tag -}}
                  {%- assign break_loop = true -%}
                  {% break %}
                  {%- elsif isLast -%}
                  {{- page_title -}}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
            {%- else -%}
            {{- page_title -}}
          {%- endif -%}
      
        {%- if current_page != 1 -%}
          {{- 'general.title.page' | t: page: current_page -}}
        {%- endif -%}
  
        {%- unless page_title contains shop.name -%}
          {{- 'general.title.shop' | t: shop: shop.name -}}
        {%- endunless -%}
      {% else %}
        {{- page_title -}}
  
        {%- if current_tags -%}
          {% capture cat_array %}{%- render 'advanced-tag-loop' -%}{% endcapture %}
          {% assign cat_array = cat_array | split: '|' %}
          {% assign title_tags = '' %}
          {% assign meta_tags = current_tags | join: ', ' %}
          {%- for tag in current_tags -%}
            {% assign is_advanced_tag = false %}
            {% assign cat = tag | split: '_' | first %}
  
            {%- unless cat == tag -%}
              {%- if cat_array contains cat -%}
                {% assign is_advanced_tag = true %}
                {% assign title_tags = title_tags | append: ', ' | append: tag | replace_first: '_', ': ' %}
              {%- endif -%}
            {%- endunless -%}
  
            {%- unless is_advanced_tag -%}
              {% assign title_tags = title_tags | append: ', ' | append: tag %}
            {%- endunless -%}
          {%- endfor -%}
          {{ 'general.title.tags' | t: tags: title_tags | remove_first: ', ' }}
        {%- endif -%}
  
        {%- if current_page != 1 -%}
          {{- 'general.title.page' | t: page: current_page -}}
        {%- endif -%}
  
        {%- unless page_title contains shop.name -%}
          {{- 'general.title.shop' | t: shop: shop.name -}}
        {%- endunless -%}
        {%- endif -%}
    </title>

    {% if template contains 'collection' %}
      {%- assign break_loop = false -%}
      {% if collection and collection.metafields.custom.seo_tags_content and current_tags %}
        {% for seo_content in collection.metafields.custom.seo_tags_content.value %}
          {%- if break_loop -%}
            {% break %}
          {%- endif -%}
          {% assign isLast = forloop.last %}
          {% for current_tag in current_tags %}
            {% assign joined_tags = seo_content.tags | join: "," %}
            {% if joined_tags contains current_tag and seo_content.meta_description_tag %}
              <meta name="description" content="{{ seo_content.meta_description_tag | escape }}">
              {%- assign break_loop = true -%}
              {% break %}
              {% elsif isLast and page_description != blank %}
              <meta name="description" content="{{ page_description | escape }}">
            {% endif %}
          {% endfor %}
        {% endfor %}
          {% elsif page_description != blank %}
          <meta name="description" content="{{ page_description | escape }}">
      {% endif %}
    {% elsif product %}
      <meta name="description" content="{{ product.metafields.global.description_tag | escape }}">
      <meta name="title" content="{{ product.metafields.global.title_tag | escape }}">
    {% endif %}

    {% render 'favicon' %}

    {% if template contains 'collection' and current_tags %}
      {% comment %}<meta name="robots" content="noindex">{% endcomment %}
      <link rel="canonical" href="https://{{ request.host }}{{ request.path }}">
    {% elsif template contains 'product' and product.metafields.custom.main_collection %}
      <link rel="canonical" href="{{ canonical_url }}">
    {% else %}
      <link rel="canonical" href="https://{{ request.host }}{{ request.path }}">    
    {% endif %}

    {% comment %}
    {% if template contains 'collection' %}
      {%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}
        {%- assign pageUrl = contentForQuerystring
          | split: '"pageurl":"'
          | last
          | split: '"'
          | first
          | split: '.myshopify.com'
          | last
          | replace: '\/', '/'
          | replace: '%20', ' '
          | replace: '\u0026', '&'
        -%}
        {% assign urlSplit = pageUrl | split: '?' %}
      {% if collection.metafields.custom.noindex or collection.metafields.custom.nofollow %}
        {% assign noindex='index' %}
        {% assign nofollow='follow' %}
        {% if collection.metafields.custom.noindex %}
          {% if collection.metafields.custom.noindex.value contains locale %}
            {% assign noindex='noindex' %}          
          {% endif %}
        {% endif %}
        {% if collection.metafields.custom.nofollow %}
          {% if collection.metafields.custom.nofollow.value contains locale %}
            {% assign nofollow='nofollow' %}          
          {% endif %}
        {% endif %}

        
      {% if urlSplit.size > 1 %}
        {% assign noindex='noindex' %}
      {% endif %}
        <meta name="robots" content="{{ noindex }},{{ nofollow }}">
      {% else %}
        {% if urlSplit.size > 1 %}
          <meta name="robots" content="noindex,follow">
        {% endif %}
      {% endif %}
    {% endif %}
    {% endcomment %}

    {% if template contains 'collection' %}
        {% assign active_filters = false %}
        {% for filter in collection.filters %}
          {% if filter.active_values.size > 0 %}
            {% assign active_filters = true %}
            {% break %}
          {% endif %}
        {% endfor %}
      
        {% if active_filters %}
          <meta name="robots" content="noindex,follow">
        {% else %}
          {% if collection.metafields.custom.noindex or collection.metafields.custom.nofollow %}
            {% assign noindex='index' %}
            {% assign nofollow='follow' %}
            {% if collection.metafields.custom.noindex %}
              {% if collection.metafields.custom.noindex.value contains locale %}
                {% assign noindex='noindex' %}          
              {% endif %}
            {% endif %}
            {% if collection.metafields.custom.nofollow %}
              {% if collection.metafields.custom.nofollow.value contains locale %}
                {% assign nofollow='nofollow' %}          
              {% endif %}
            {% endif %}
            <meta name="robots" content="{{ noindex }},{{ nofollow }}">
          {% endif %}
        {% endif %}

    {% endif %}
    
    <meta name="viewport" content="width=device-width">

    {% assign twitter_handle = settings.social_twitter | split: 'twitter.com/' | last %}
    {% render 'social-meta-tags', twitter_handle: twitter_handle %}

    <link rel="preload" href="{{ settings.type_menu | font_url }}" as="font" crossorigin="anonymous">
    <link rel="preload" as="style" href="{{ 'theme.css' | asset_url }}">

    {{ content_for_header }}

    {{ 'theme.css' | asset_url | stylesheet_tag }}

    {% comment %}Inject theme-object begin{% endcomment %}
    <script>
      window.Theme = window.Theme || {};
      window.Theme.version = '9.1.1';
      window.Theme.name = 'Empire';
      window.Theme.routes = {
        "root_url": "{{ routes.root_url }}",
        "account_url": "{{ routes.account_url }}",
        "account_login_url": "{{ routes.account_login_url }}",
        "account_logout_url": "{{ routes.account_logout_url }}",
        "account_register_url": "{{ routes.account_register_url }}",
        "account_addresses_url": "{{ routes.account_addresses_url }}",
        "collections_url": "{{ routes.collections_url }}",
        "all_products_collection_url": "{{ routes.all_products_collection_url }}",
        "search_url": "{{ routes.search_url }}",
        "predictive_search_url": "{{ routes.predictive_search_url }}",
        "cart_url": "{{ routes.cart_url }}",
        "cart_add_url": "{{ routes.cart_add_url }}",
        "cart_change_url": "{{ routes.cart_change_url }}",
        "cart_clear_url": "{{ routes.cart_clear_url }}",
        "product_recommendations_url": "{{ routes.product_recommendations_url }}",
      };
    </script>
    {% comment %}Inject theme-object end{% endcomment %}

    <!-- Hotjar Tracking Code for Planet Cards FR -->
    <script>
        (function (h, o, t, j, a, r) {
            h.hj =
                h.hj ||
                function () {
                    (h.hj.q = h.hj.q || []).push(arguments);
                };
            h._hjSettings = { hjid: 4933549, hjsv: 6 };
            a = o.getElementsByTagName("head")[0];
            r = o.createElement("script");
            r.async = 1;
            r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
            a.appendChild(r);
        })(window, document, "https://static.hotjar.com/c/hotjar-", ".js?sv=");
    </script>
    <!-- End Hotjar  -->

    <script>
      function decodeBase64(base64) {
        try {
          return atob(base64);
        } catch (e) {
          console.error('Invalid base64 string', e);
          return null;
        }
      }

      function copyAttributes(source, target) {
        for (let i = 0; i < source.attributes.length; i++) {
          let attr = source.attributes[i];
          if (attr.name !== 'data-hash') {  // data-hash is not needed in <a>
            target.setAttribute(attr.name, attr.value);
          }
        }
      }

      document.addEventListener('DOMContentLoaded', (event) => {
        document.querySelectorAll('.vlh-smart-link').forEach(span => {
          span.addEventListener('mouseover', function() {
            const hash = span.getAttribute('data-hash');
            const url = decodeBase64(hash);

            if (url) {
              const a = document.createElement('a');
              a.href = url;
              copyAttributes(span, a);
              a.innerHTML = span.innerHTML;  // Copy the inner HTML content

              span.parentNode.replaceChild(a, span);
            }
          });
        });
      });
    </script>

    {% comment %}
    {% if template contains 'cart' %}
      <meta http-equiv="Cache-Control" content="no-store, max-age=0">
    {% endif %}
    {% endcomment %}
  </head>



  <body
    class="template-{{ template.name }}"
    data-instant-allow-query-string
    {% if settings.reduce_animations %}
      data-reduce-animations
    {% endif %}
  >
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-K3QKC5PP"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
    
    <script>
      document.documentElement.className=document.documentElement.className.replace(/\bno-js\b/,'js');
      if(window.Shopify&&window.Shopify.designMode)document.documentElement.className+=' in-theme-editor';
      if(('ontouchstart' in window)||window.DocumentTouch&&document instanceof DocumentTouch)document.documentElement.className=document.documentElement.className.replace(/\bno-touch\b/,'has-touch');
    </script>

    {% comment %}Inject icon-star-symbol begin{% endcomment %}
    <svg
      class="icon-star-reference"
      aria-hidden="true"
      focusable="false"
      role="presentation"
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="3 3 17 17"
      fill="none"
    >
      <symbol id="icon-star">
        <rect class="icon-star-background" width="20" height="20" fill="currentColor"/>
        <path d="M10 3L12.163 7.60778L17 8.35121L13.5 11.9359L14.326 17L10 14.6078L5.674 17L6.5 11.9359L3 8.35121L7.837 7.60778L10 3Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="none"/>
      </symbol>
      <clipPath id="icon-star-clip">
        <path d="M10 3L12.163 7.60778L17 8.35121L13.5 11.9359L14.326 17L10 14.6078L5.674 17L6.5 11.9359L3 8.35121L7.837 7.60778L10 3Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </clipPath>
    </svg>
    {% comment %}Inject icon-star-symbol end{% endcomment %}

    <a class="skip-to-main" href="#site-main">{{ 'general.accessibility.skip_to_content' | t }}</a>

    {% sections 'header-group' %}

    <div style="--background-color: {{ settings.color_background }}">
      {%
        render 'age-gate',
        id: 'page',
        sections: content_for_layout,
      %}
    </div>

    <div class="intersection-target" data-header-intersection-target></div>
    <div class="site-main-dimmer" data-site-main-dimmer></div>
    <main id="site-main" class="site-main" aria-label="Main content" tabindex="-1">
      {%- unless template contains 'index'
        or template contains 'cart'
        or template contains 'list-collections'
        or template contains '404'
        or template contains 'collections'
        or template contains 'product'
        or template contains 'collection'
        or template == 'blog'
        or template == 'article'
        or template contains 'account'
        or template contains 'order'
        or template contains 'addresses'
      -%}
        {%- assign t = template | split: '.' | first -%}

        <nav class="breadcrumbs" role="navigation" aria-label="breadcrumbs">
          <ol class="breadcrumbs__list">
            <li class="breadcrumbs__item">
              <a class="breadcrumbs__link" href="{{ routes.root_url }}">{{ 'general.breadcrumbs.home' | t }}</a>
            </li>
            {%- case t -%}
              {%- when 'page' -%}
                <li class="breadcrumbs__item">
                  <a class="breadcrumbs__link" href="{{ page.url }}" aria-current="page">{{ page.title }}</a>
                </li>
              {%- when 'product' -%}
                {%- if collection.url -%}
                  <li class="breadcrumbs__item">
                    {{ collection.title | link_to: collection.url }}
                  </li>
                {%- endif -%}
                <li class="breadcrumbs__item">
                  <a class="breadcrumbs__link" href="{{ product.url }}" aria-current="page">{{ product.title }}</a>
                </li>
              {%- when 'collection' and collection.handle -%}
                {%- if current_tags -%}
                  <li class="breadcrumbs__item">
                    {{ collection.title | link_to: collection.url }}
                  </li>
                  <li class="breadcrumbs__item">
                    {%- capture tag_url -%}{{ collection.url }}/{{ current_tags | join: "+"}}{%- endcapture -%}
                    <a class="breadcrumbs__link" href="{{ tag_url }}" aria-current="page">
                      {{- current_tags | join: ' + ' -}}
                    </a>
                  </li>
                {%- else -%}
                  <li class="breadcrumbs__item">
                    <a class="breadcrumbs__link" href="{{ collection.url }}" aria-current="page">
                      {{- collection.title -}}
                    </a>
                  </li>
                {%- endif -%}
              {%- when 'blog' -%}
                {%- if current_tags -%}
                  <li class="breadcrumbs__item">
                    {{ blog.title | link_to: blog.url }}
                  </li>
                  <li class="breadcrumbs__item">
                    {%- capture tag_url -%}{{blog.url}}/tagged/{{ current_tags | join: "+" }}{%- endcapture -%}
                    <a class="breadcrumbs__link" href="{{ tag_url }}" aria-current="page">
                      {{- current_tags | join: ' + ' -}}
                    </a>
                  </li>
                {%- else -%}
                  <li class="breadcrumbs__item">
                    <a class="breadcrumbs__link" href="{{ blog.url }}" aria-current="page">{{ blog.title }}</a>
                  </li>
                {%- endif -%}
              {%- when 'article' -%}
                <li class="breadcrumbs__item">
                  {{ blog.title | link_to: blog.url }}
                </li>
                <li class="breadcrumbs__item">
                  <a class="breadcrumbs__link" href="{{ article.url }}" aria-current="page">{{ article.title }}</a>
                </li>
              {%- else -%}
                <li class="breadcrumbs__item">
                  <a class="breadcrumbs__link" href="{{ request.path }}" aria-current="page">{{ page_title }}</a>
                </li>
            {%- endcase -%}
          </ol>
        </nav>
      {%- endunless -%}
      {{ content_for_layout }}
    </main>

    {% unless template.name == 'index' or template == 'index' or request.page_type == 'index' %}
      {% section 'dynamic-highlights-banner' %}
    {% endunless %}
    {% sections 'footer-group' %}

    {% comment %}
      Below are various templates used in JavaScript
    {% endcomment %}
    <div style="display: none;" aria-hidden="true" data-templates>
      {% comment %}Inject message-banner begin{% endcomment %}
      <div
        class="message-banner--container"
        role="alert"
        data-message-banner
      >
        <div class="message-banner--outer">
          <div class="message-banner--inner" data-message-banner-content></div>

          <button
            class="message-banner--close"
            type="button"
            aria-label="{{ 'general.accessibility.close' | t }}"
            data-message-banner-close
          >
            {%- render 'icon-menu-close' -%}
          </button>
        </div>
      </div>
      {% comment %}Inject message-banner end{% endcomment %}

      {% comment %}Inject atc-banner begin{% endcomment %}
      <section class="atc-banner--container" role="log" data-atc-banner>
        <div class="atc-banner--outer">
          <div class="atc-banner--inner">
            <div class="atc-banner--product">
              <h2 class="atc-banner--product-title">
                <span class="atc-banner--product-title--icon">
                  {%
                    render 'icon-library',
                    id: 'icon-checkmark',
                  %}
                </span>
                {{ 'add_to_cart_banner.general.product_added' | t }}
              </h2>

              <div class="atc--product">
                <div class="atc--product-image" data-atc-banner-product-image>
                  {{ 'image' | placeholder_svg_tag: 'placeholder--image' }}
                </div>
                <div class="atc--product-details">
                  <h2 class="atc--product-details--title" data-atc-banner-product-title></h2>
                  <span class="atc--product-details--options" data-atc-banner-product-options></span>
                  <span class="atc--product-details--price">
                    <span class="atc--product-details--price-quantity" data-atc-banner-product-price-quantity></span>
                    <span class="atc--product-details--price-value money" data-atc-banner-product-price-value></span>
                    <span
                      class="atc--product-details--price-discounted money"
                      data-atc-banner-product-price-discounted
                    ></span>
                    <span class="atc--product-details--unit-price hidden" data-atc-banner-unit-price>
                      {{
                        'product.general.price_per_unit_html'
                        | t:
                          total_quantity: '** total_quantity **',
                          unit_price: '** unit_price **',
                          unit_measure: '** unit_measure **'
                      }}
                    </span>
                  </span>
                  <ul class="discount-list" data-atc-banner-product-discounts>
                    <li class="discount-list-item">
                      {% render 'icon-library', id: 'icon-sale-tag' %}
                      <span class="discount-title"></span>
                      (-<span class="money discount-amount"></span>)
                    </li>
                  </ul>
                  <span class="atc--line-item-subscriptions" data-atc-banner-product-subscription-title></span>
                </div>
              </div>
            </div>

            <div class="atc-banner--cart">
              <div class="atc-banner--cart-subtotal">
                <span class="atc-subtotal--label">
                  {{ 'add_to_cart_banner.general.sub_total' | t }}
                </span>
                <span class="atc-subtotal--price money" data-atc-banner-cart-subtotal></span>
              </div>

              <footer class="atc-banner--cart-footer">
                <a
                  class="button-secondary atc-button--viewcart"
                  href="{{ routes.cart_url }}"
                  data-atc-banner-cart-button
                >
                  {{ 'add_to_cart_banner.general.view_cart_html' | t: count: '<span></span>' }}
                </a>
                <form
                  action="{{ routes.cart_url }}"
                  method="post"
                  aria-label="cart checkout"
                >
                  <button class="button-primary atc-button--checkout" type="submit" name="checkout">
                    {% if settings.enable_checkout_lock_icon %}
                      {% render 'icon-checkout-lock' %}
                    {% endif %}
                    <span>{{ 'add_to_cart_banner.general.checkout' | t }}</span>
                  </button>
                </form>
              </footer>
            </div>
          </div>

          <button
            class="atc-banner--close"
            type="button"
            aria-label="{{ 'general.accessibility.close' | t }}"
            data-atc-banner-close
          >
            {%- render 'icon-menu-close' -%}
          </button>
        </div>
      </section>
      {% comment %}Inject atc-banner end{% endcomment %}
    </div>

    {% comment %}
      Modal container, used on Collections, Password, and QuickShop
    {% endcomment %}
    {% comment %}Inject modal begin{% endcomment %}
    <div class="modal" data-modal-container aria-label="modal window" data-trap-focus>
      <div class="modal-inner" data-modal-inner>
        <button
          class="modal-close"
          type="button"
          aria-label="{{ 'general.accessibility.close' | t }}"
          data-modal-close
        >
          {% render 'icon-menu-close' %}
        </button>
        <div class="modal-content" data-modal-content></div>
      </div>
    </div>

    <div class="modal-1" data-modal-container-1 aria-label="modal window">
      <div class="modal-inner" data-modal-inner>
        <button
          class="modal-close"
          type="button"
          aria-label="{{ 'general.accessibility.close' | t }}"
          data-modal-1-close
        >
          {% render 'icon-menu-close' %}
        </button>
        <div class="modal-content" data-modal-content></div>
      </div>
    </div>
    {% comment %}Inject modal end{% endcomment %}

    {% comment %}
      This is the PhotoSwipe dialog which needs to be in the base page
    {% endcomment %}
    {% comment %}Inject product-gallery-zoom begin{% endcomment %}
    {% comment %} Root element of PhotoSwipe. Must have class pswp. {% endcomment %}
    <div
      class="pswp"
      tabindex="-1"
      role="dialog"
      aria-hidden="true"
      aria-label="{{ 'general.accessibility.product_zoom_dialog' | t }}"
      data-photoswipe
    >
      {% comment %}
        Background of PhotoSwipe.
        It's a separate element as animating opacity is faster than rgba().
      {% endcomment %}
      <div class="pswp__bg"></div>

      {% comment %} Slides wrapper with overflow:hidden. {% endcomment %}
      <div class="pswp__scroll-wrap">
        {% comment %}
          Container that holds slides.
          PhotoSwipe keeps only 3 of them in the DOM to save memory.
          Don't modify these 3 pswp__item elements, data is added later on.
        {% endcomment %}
        <div class="pswp__container" aria-hidden="true">
          <div class="pswp__item"></div>
          <div class="pswp__item"></div>
          <div class="pswp__item"></div>
        </div>

        {% comment %} Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. {% endcomment %}
        <div class="pswp__ui pswp__ui--hidden">
          <div class="pswp__top-bar">
            {% comment %}  Controls are self-explanatory. Order can be changed. {% endcomment %}
            <div class="pswp__counter"></div>
            <button class="pswp__button pswp__button--close" title="{{ 'general.accessibility.close' | t }}">
              <span tabindex="-1">
                {% render 'icon-library', id: 'icon-close' %}
              </span>
            </button>
            <button class="pswp__button pswp__button--share" title="Share"></button>
            <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
            <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

            {% comment %} Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR {% endcomment %}
            {% comment %} element will get class pswp__preloader--active when preloader is running {% endcomment %}
            <div class="pswp__preloader">
              <div class="pswp__preloader__icn">
                <div class="pswp__preloader__cut">
                  <div class="pswp__preloader__donut"></div>
                </div>
              </div>
            </div>
          </div>

          <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
            <div class="pswp__share-tooltip"></div>
          </div>

          <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
          <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

          <div class="pswp__caption">
            <div class="pswp__caption__center"></div>
          </div>
        </div>
      </div>
      <div class="product-zoom--thumbnails" data-photoswipe-thumbs>
        <button
          class="gallery-navigation--scroll-button scroll-left"
          aria-label="Scroll thumbnails left"
          data-gallery-scroll-button
        >
          {% render 'icon-chevron-down' %}
        </button>
        <button
          class="gallery-navigation--scroll-button scroll-right"
          aria-label="Scroll thumbnails right"
          data-gallery-scroll-button
        >
          {% render 'icon-chevron-down' %}
        </button>
        <div class="product-zoom--thumb-scroller" data-photoswipe-thumb-scroller></div>
      </div>
    </div>
    {% comment %}Inject product-gallery-zoom end{% endcomment %}

    {% comment %}
      Product compare drawer, shown when products are compared
    {% endcomment %}
    {% comment %}Inject template-allows-compare begin{% endcomment %}
    {% assign template_allows_compare = settings.enable_product_compare %}
    {% if template.name == 'cart' %}
      {% assign template_allows_compare = false %}
    {% elsif template.name == 'product' and template.suffix contains 'compare' %}
      {% assign template_allows_compare = false %}
    {% endif %}
    {% comment %}Inject template-allows-compare end{% endcomment %}

    {% if template_allows_compare %}
      {% comment %}Inject product-compare-drawer begin{% endcomment %}
      <div class="product-compare-drawer" data-product-compare-drawer>
        <div class="product-compare-drawer__header" data-product-compare-drawer-header>
          <h2 class="product-compare-drawer__title" data-product-compare-drawer-title>
            {{ 'product_compare.drawer_title' | t }}
          </h2>

          <p
            class="product-compare-drawer__notification"
            data-product-count-one="{{ 'product_compare.drawer_notification.one' | t }}"
            data-product-count-other="{{ 'product_compare.drawer_notification.other' | t: count: '** count **' }}"
            data-product-compare-drawer-notification
          >
            {{ 'product_compare.drawer_notification' | t: count }}
          </p>

          <span class="product-compare-drawer__trigger">
            {% render 'icon-chevron-down' %}
          </span>
        </div>

        <div class="product-compare-drawer__container">
          <div class="product-compare-drawer__items" data-compare-drawer-items-container>
            <template data-product-compare-drawer-item-template>
              <div
                class="
                  product-compare-drawer__item
                  imagestyle--{% if settings.product_grid_image_crop and settings.product_grid_image_style != 'natural' %}cropped-{% endif %}{{ settings.product_grid_image_style }}
                "
              >
                <div class="product-compare-drawer__image">
                  <figure class="productitem--image" data-product-compare-drawer-image></figure>
                </div>
                <a class="product-compare-drawer__item-title" data-product-compare-drawer-title></a>
                <button class="product-compare-drawer__remove" data-product-compare-drawer-remove>
                  {%
                    render 'icon-library',
                    id: 'icon-remove',
                    icon_class: 'product-compare-drawer__remove-icon',
                  %}
                </button>
              </div>
            </template>

            {% for i in (1..3) %}
              <div class="product-compare-drawer__item-placeholder" data-product-compare-drawer-item-placeholder>
                <p class="product-compare-drawer__item-placeholder-text">
                  {% if forloop.index == 1 %}
                    {{ 'product_compare.drawer_notification_placeholder.first' | t }}
                  {% elsif forloop.index == 2 %}
                    {{ 'product_compare.drawer_notification_placeholder.second' | t }}
                  {% elsif forloop.index == 3 %}
                    {{ 'product_compare.drawer_notification_placeholder.third' | t }}
                  {% endif %}
                </p>
              </div>
            {% endfor %}
          </div>

          <div class="product-compare-drawer__actions">
            <a
              class="
                product-compare-drawer__link
                button-primary
                disabled
              "
              href="{{ routes.root_url }}"
              data-product-compare-drawer-link
              data-product-compare-drawer-link-text="{{ 'product_compare.compare' | t }}"
            >
              {{ 'product_compare.compare' | t }}
            </a>

            <button class="product-compare-drawer__clear-all" data-product-compare-clear-all>
              {{ 'product_compare.drawer_clear_all' | t }}
            </button>
          </div>
        </div>
      </div>
      {% comment %}Inject product-compare-drawer end{% endcomment %}
    {% endif %}

    {% if settings.enable_product_compare %}
      {% comment %}Inject product-compare-breadcrumb-data begin{% endcomment %}
      {% assign compare_breadcrumb_title = null %}

      {% case request.page_type %}
        {% when 'product' %}
          {% assign compare_breadcrumb_title = product.title %}
        {% when 'collection' %}
          {% assign compare_breadcrumb_title = collection.title %}
        {% when 'index' %}
          {% assign compare_breadcrumb_title = 'general.breadcrumbs.home' | t %}
        {% when 'search' %}
          {% assign compare_breadcrumb_title = 'general.accessibility.search' | t %}
      {% endcase %}

      {% assign compare_breadcrumb_update = true %}

      {% if template.name == 'product' and template.suffix contains 'compare' %}
        {% assign compare_breadcrumb_update = false %}
      {% endif %}

      <script type="application/json" data-product-compare-breadcrumb-data>
        {
          "title": {{ compare_breadcrumb_title | json }},
          "update": {{ compare_breadcrumb_update }}
        }
      </script>
      {% comment %}Inject product-compare-breadcrumb-data end{% endcomment %}
    {% endif %}

    {%- if template contains 'customer' -%}
      {{ 'shopify_common.js' | shopify_asset_url | script_tag }}
      {{ 'customer_area.js' | shopify_asset_url | script_tag }}
    {%- endif -%}

    {% unless settings.reduce_animations %}
      <script>
        (
          function () {
            var classes = {
              block: 'pxu-lia-block',
              element: 'pxu-lia-element',
            };

            document
              .querySelectorAll('[type="application/pxs-animation-mapping+json"]')
              .forEach(function (mappingEl) {
                const section = mappingEl.parentNode;
                try {
                  const mapping = JSON.parse(mappingEl.innerHTML);
                  mapping.elements.forEach(function (elementSelector) {
                    section
                      .querySelectorAll(elementSelector)
                      .forEach(function (element) { element.classList.add(classes.element); });
                  });

                  mapping.blocks.forEach(function (blockSelector) {
                    section
                      .querySelectorAll(blockSelector)
                      .forEach(function (block) { block.classList.add(classes.block); });
                  });
                } catch (error) {
                  console.warn('Unable to parse animation mapping', mappingEl, error);
                }
            });
          }
        )()
      </script>
    {% endunless %}

    <script
      src="{{ 'empire.js' | asset_url }}"
      data-scripts
      data-shopify-api-url="{{ 'api.jquery.js' | shopify_asset_url }}"
      data-shopify-countries="/services/javascripts/countries.js"
      data-shopify-common="{{ 'shopify_common.js' | shopify_asset_url }}"
      data-shopify-cart="{{ 'jquery.cart.js' | asset_url }}"
      data-pxu-polyfills="{{ 'polyfills.min.js' | asset_url }}"
    ></script>

    {% render 'structured-data' %}

    <script>
      (function () {
        function handleFirstTab(e) {
          if (e.keyCode === 9) { // the "I am a keyboard user" key
            document.body.classList.add('user-is-tabbing');
            window.removeEventListener('keydown', handleFirstTab);
          }
        }
        window.addEventListener('keydown', handleFirstTab);
      })();
    </script>

    {% unless settings.reduce_animations %}
      {{ 'ripple.css' | asset_url | stylesheet_tag }}
    {% endunless %}
    <script
      src="{{ 'instantPage.min.js' | asset_url }}"
      type="module"
      defer
    ></script>
          {% render 'scroll-to-top-button' %}
  </body>
  <style>
    .breadcrumbs {
      margin: 1.25rem 0;
      position: absolute;
      z-index: 1000;
      right: 50%;
      transform: translateX(50%);
      padding-left:2.5rem;
      max-width:1400px;
      width:100%;
      margin-left:auto;
      margin-right: auto;
    }

    .breadcrumbs__list {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    .breadcrumbs__item {
      display: inline-block;
    }

    .breadcrumbs__item:not(:last-child):after {
      border-style: solid;
      border-width: .03em .03em 0 0;
      content: '';
      display: inline-block;
      height: .20em;
      margin: 0 .20em;
      position: relative;
      transform: rotate(45deg);
      vertical-align: middle;
      width: .20em;
      font-size: 2rem;
      margin-right: 0.4em
    }

    .breadcrumbs__link {
      text-decoration: none;
    }

    .breadcrumbs__link[aria-current="page"] {
      color: inherit;
      font-weight: normal;
      text-decoration: none;
    }
    .breadcrumbs__link:visited{
      color: inherit;
    }

    .breadcrumbs__link:hover,
    .breadcrumbs__link[aria-current="page"]:focus {
      text-decoration: underline;
    }
  </style>
  <script src="{{ 'Wishlist.js' | asset_url }}" defer="defer"></script>

  
    {% case locale %} 
      {% when "it" %}
      <script>
    window.axeptioSettings = {
      clientId: "615c3ccf2fa3cd4e00b84eb7",
      cookiesVersion: "planet-cards it-base",
    };
     
    (function(d, s) {
      var t = d.getElementsByTagName(s)[0], e = d.createElement(s);
      e.async = true; e.src = "//static.axept.io/sdk.js";
      t.parentNode.insertBefore(e, t);
    })(document, "script");
    </script>
    {% when "de" %}
      <script>
    window.axeptioSettings = {
      clientId: "615c3ccf2fa3cd4e00b84eb7",
      cookiesVersion: "planet-cards de-base",
    };
     
    (function(d, s) {
      var t = d.getElementsByTagName(s)[0], e = d.createElement(s);
      e.async = true; e.src = "//static.axept.io/sdk.js";
      t.parentNode.insertBefore(e, t);
    })(document, "script");
    </script>
      {% else %}
      <script>
    window.axeptioSettings = {
      clientId: "615c3ccf2fa3cd4e00b84eb7",
      cookiesVersion: "planet-cards fr-base",
    };
     
    (function(d, s) {
      var t = d.getElementsByTagName(s)[0], e = d.createElement(s);
      e.async = true; e.src = "//static.axept.io/sdk.js";
      t.parentNode.insertBefore(e, t);
    })(document, "script");
    </script>
  {% endcase %}

  <!-- Integration Shopify Axeptio -->
  <script>
    window.vendors_shopify = [
      {
        name: "shopify_preferences",
        title: "Preferences",
        shortDescription:
          "Cookies that remember your preferences, such as country or language, to personalize your visits to our website",
        policyUrl: "https://www.shopify.com/legal/terms",
        domain: "shopify.com",
      },
      {
        name: "shopify_analytics",
        title: "Analytics",
        shortDescription:
          "Cookies to understand how you interact with our site",
        policyUrl: "https://www.shopify.com/legal/terms",
        domain: "shopify.com",
      },
      {
        name: "shopify_marketing",
        title: "Marketing",
        shortDescription:
          "Cookies to provide ads and marketing communications based on your interests",
        policyUrl: "https://www.shopify.com/legal/terms",
        domain: "shopify.com",
      },
      {
        name: "shopify_sale_of_data",
        title: "Sale of Data",
        shortDescription:
          "Opt in / out of data sharing / sales",
        policyUrl: "https://www.shopify.com/legal/terms",
        domain: "shopify.com",
      },
    ];
    
    (_axcb = window._axcb || []).push(function (sdk) {
      sdk.on("ready", function () {
    
        if (!sdk.cookiesConfig) {
          return;
        }
    
        // Building Shopify Step in cookie widget
        sdk.cookiesConfig.steps.splice(1, 0, {
          hasVendors: true,
          image: "cookie-bienvenue",
          layout: "category",
          message:
            "Shopify uses several services and plugins, we can control them via their Privacy API",
          name: "welcome",
          onlyOnce: true,
          title: "Shopify Cookies",
          subTitle: "Shopify uses several services, is it OK for you ?",
          vendors: window.vendors_shopify,
        });
    
        // Shopify Consent API
        window.Shopify.loadFeatures([
          {
            name: "consent-tracking-api",
            version: "0.1",
          },
        ]);
      });
    
      // Update Shopify Consent API
      sdk.on("consent:saved", function (payload) {
        const choices = payload.consent.preferences.vendors;
        window.Shopify.customerPrivacy.setTrackingConsent(
          {
            preferences: choices.shopify_preferences,
            analytics: choices.shopify_analytics,
            marketing: choices.shopify_marketing,
            sale_of_data: choices.shopify_sale_of_data,
          },
          () => { }
        );
      });
    });
  </script>
          <script>
            let urlParams = new URLSearchParams(window.location.search);
            
            const cookieToAdd = urlParams.get('cookieToAdd');
            if(cookieToAdd){
              const cookieSplit = cookieToAdd.split(":");
              if(cookieSplit.length>1){
                const key = cookieSplit[0];
                const value = cookieSplit[1];
                const daysUntilExpiration = 30;
                const expirationDate = new Date();
                expirationDate.setDate(expirationDate.getDate() + daysUntilExpiration);
                document.cookie = `${key}=${value}; domain={{ request.host | split:'www'}}; expires=${expirationDate.toUTCString()}; path=/`;
              }
            }
            
            const token_persoapp = urlParams.get('token_persoapp');
            if(token_persoapp){
              const pathSplit = window.location.href.split('?');
              const path = pathSplit[0];
              let newQueryString = '';
              if(pathSplit[1]){
              const queryString = pathSplit[1];
              const queryParams = queryString.split("&");

              // Filter out the parameter with the specified name
              const filteredParams = queryParams.filter(function(param) {
                  return param.split("=")[0] !== 'token_persoapp';
              });
          
              // Join the remaining key-value pairs back into a string
              newQueryString = filteredParams.length> 0 ? '?'+filteredParams.join("&") : '';
            }
          
              localStorage.setItem("outil_access_token", token_persoapp);
              window.history.replaceState({},'',path+newQueryString)
            }
          </script>
          {% if customer and customer.metafields.custom.access_token %}
            <script>
              localStorage.setItem("outil_access_token", "{{customer.metafields.custom.access_token.value}}");
              fetch(OUTIL_PERSO_API + 'users/clearMetafield',{
                method: "POST",
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer {{ customer.metafields.custom.access_token }}`
                },
                body:JSON.stringify({
                  "namespace": "custom",
                  "key": "access_token"
                })
              })
            </script>
          {% endif %}
          <script>
            const creationsInCart = [];
            const promises = []
            const access_token = localStorage.getItem("outil_access_token");
            const justLoggedIn = localStorage.getItem("just_logged_in");
            if(justLoggedIn && access_token){
            const uuidKey = "uuid"
            const userUUID = getCookieValue(uuidKey);
            if(userUUID){
              fetch(OUTIL_PERSO_API+"users/newOwner", {
                      method: 'POST',
                      headers: {
                          'Accept': 'application/json',
                          'Content-Type': 'application/json',
                          'Authorization': `Bearer ${access_token}`
                      },
                      body: JSON.stringify({"oldUUID": userUUID})
              });
              document.cookie = `${uuidKey}=${userUUID}; domain={{ request.host | split:'www'}}; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/`;
            }
            {% if cart %}
              {% for item in cart.items %}
                {% if item.product.metafields.custom.creation_id %}
                  {%- capture api_path -%}
                    {%- if item.product.type == 'Card' -%}
                      cards
                    {%- endif -%}
                  {%- endcapture -%}
                  promises.push(fetch(OUTIL_PERSO_API+"{{api_path}}/getOwnership/{{ item.product.metafields.custom.creation_id }}", {
                      method: 'POST',
                      headers: {
                          'Accept': 'application/json',
                          'Content-Type': 'application/json',
                          'Authorization': `Bearer ${access_token}`
                      }
                  }))
                {% endif %}
              {% endfor %}
            {% endif %}
              
              localStorage.removeItem("just_logged_in")
              }
          </script>
          {% if cart %}
          <script>
            {% assign variantQuantities = '' %}
            {% for item in cart.items %}
              {% assign variantQuantities = variantQuantities | append: item.variant.id | append: ':' | append: item.quantity %}
                {% unless forloop.last %}
                  {% assign variantQuantities = variantQuantities | append: ',' %}
                {% endunless %}
            {% endfor %}
            
            const expirationDateCart = new Date();
            expirationDateCart.setDate(expirationDateCart.getDate() + 30);
            document.cookie = `cart_outil={{variantQuantities}}; domain={{ request.host | split:'www'}}; expires=${expirationDateCart.toUTCString()}; path=/`;
            
          </script>
          {% endif %}
          {% render 'gtm-product-viewed' %}
</html>
